{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\LABSREACT\\\\lab3\\\\AwesomeProject\\\\screens\\\\ShowScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Header from \"../components/Header\";\nimport { Item, Text, Button } from 'native-base';\nimport SvgQRCode from 'react-native-qrcode-svg';\nexport var ShowScreen = function (_Component) {\n  _inherits(ShowScreen, _Component);\n\n  var _super = _createSuper(ShowScreen);\n\n  function ShowScreen() {\n    var _this;\n\n    _classCallCheck(this, ShowScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.backFunction = function () {\n      _this.props.navigation.goBack();\n    };\n\n    _this.userInfo = function () {\n      var str = JSON.stringify({\n        name: _this.props.navigation.getParam('name'),\n        phone: _this.props.navigation.getParam('phone'),\n        site: _this.props.navigation.getParam('site')\n      });\n      console.log(str);\n      return str;\n    };\n\n    return _this;\n  }\n\n  _createClass(ShowScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, React.createElement(Header, {\n        name: this.props.navigation.getParam('name'),\n        f: this.backFunction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }), React.createElement(StatusBar, {\n        barStyle: \"light-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.textBold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }\n      }, \"\\u0418\\u043C\\u044F: \"), this.props.navigation.getParam('name')), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.textBold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D: \"), this.props.navigation.getParam('phone')), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.textBold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }, \"\\u0421\\u0430\\u0439\\u0442: \"), this.props.navigation.getParam('site')), React.createElement(View, {\n        style: styles.qr,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 5\n        }\n      }, React.createElement(SvgQRCode, {\n        value: JSON.stringify({\n          name: this.props.navigation.getParam('name'),\n          phone: this.props.navigation.getParam('phone'),\n          site: this.props.navigation.getParam('site')\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 6\n        }\n      })));\n    }\n  }]);\n\n  return ShowScreen;\n}(Component);\nShowScreen.navigationOptions = {\n  header: null\n};\nvar styles = StyleSheet.create({\n  text: {\n    fontSize: 18,\n    color: '#21252b',\n    margin: 15\n  },\n  textBold: {\n    fontSize: 20,\n    color: '#21252b',\n    margin: 15,\n    fontWeight: \"500\"\n  },\n  qr: {\n    padding: 20,\n    textAlign: \"center\"\n  }\n});\nexport default ShowScreen;","map":{"version":3,"sources":["C:/LABSREACT/lab3/AwesomeProject/screens/ShowScreen.js"],"names":["React","Component","Header","Item","Text","Button","SvgQRCode","ShowScreen","backFunction","props","navigation","goBack","userInfo","str","JSON","stringify","name","getParam","phone","site","console","log","styles","text","textBold","qr","navigationOptions","header","StyleSheet","create","fontSize","color","margin","fontWeight","padding","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { View, StyleSheet, StatusBar } from 'react-native'\r\nimport Header from '../components/Header'\r\nimport { Item, Text, Button } from 'native-base'\r\n// import QRCode from 'react-qr-code';\r\nimport SvgQRCode from 'react-native-qrcode-svg'\r\n// import { QRCode } from 'react-native-custom-qr-codes-expo';\r\nexport class ShowScreen extends Component {\r\n\r\n    static navigationOptions = {\r\n        header: null\r\n    }\r\n\r\n    backFunction = () => {\r\n        this.props.navigation.goBack()\r\n\t}\r\n\t\r\n\tuserInfo = () => {\r\n        let str = JSON.stringify({\r\n\t\t\tname: this.props.navigation.getParam('name'),\r\n\t\t\tphone: this.props.navigation.getParam('phone'),\r\n\t\t\tsite: this.props.navigation.getParam('site')\r\n\t\t})\r\n\t\tconsole.log(str);\r\n\t\treturn str;\r\n\t}\r\n\t\r\n\t// userInfo();\r\n\r\n    render() {\r\n        return(\r\n            <View>\r\n                <Header name={this.props.navigation.getParam('name')} f={this.backFunction}/>\r\n                <StatusBar barStyle='light-content' />\r\n                <Text style={styles.text}>\r\n                    <Text style={styles.textBold}>Имя: </Text>\r\n                    {this.props.navigation.getParam('name')}\r\n                </Text>\r\n                <Text style={styles.text}>\r\n                    <Text style={styles.textBold}>Телефон: </Text>\r\n                    {this.props.navigation.getParam('phone')}\r\n                </Text>\r\n                <Text style={styles.text}>\r\n                    <Text style={styles.textBold}>Сайт: </Text>\r\n                    {this.props.navigation.getParam('site')}\r\n\t\t\t\t</Text>\r\n\t\t\t\t<View style={styles.qr}>\r\n\t\t\t\t\t{/* <QRCode value={this.props.navigation.getParam('name')} /> */}\r\n\t\t\t\t\t{/* <SvgQRCode value={this.userInfo}/> */}\r\n\t\t\t\t\t<SvgQRCode\r\n\t\t\t\t\t\tvalue={JSON.stringify({\r\n\t\t\t\t\t\t\tname: this.props.navigation.getParam('name'),\r\n\t\t\t\t\t\t\tphone: this.props.navigation.getParam('phone'),\r\n\t\t\t\t\t\t\tsite: this.props.navigation.getParam('site')\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</View>\r\n            </View>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    text: {\r\n        fontSize: 18,\r\n        color: '#21252b',\r\n        margin: 15\r\n    },\r\n    textBold: {\r\n        fontSize: 20,\r\n        color: '#21252b',\r\n        margin: 15,\r\n        fontWeight: \"500\"\r\n\t},\r\n\tqr: {\r\n\t\tpadding: 20,\r\n\t\ttextAlign:\"center\"\r\n\t}\r\n})\r\nexport default ShowScreen"]},"metadata":{},"sourceType":"module"}