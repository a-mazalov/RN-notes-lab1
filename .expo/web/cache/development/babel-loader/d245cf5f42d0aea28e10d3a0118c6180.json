{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\LABSREACT\\\\lab1\\\\screens\\\\ShowScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Header from \"../components/Header\";\nimport { Item, Text, Button } from 'native-base';\nimport { ButtonGroup } from 'react-native-elements';\nexport var ShowScreen = function (_Component) {\n  _inherits(ShowScreen, _Component);\n\n  var _super = _createSuper(ShowScreen);\n\n  function ShowScreen() {\n    var _this;\n\n    _classCallCheck(this, ShowScreen);\n\n    _this = _super.call(this);\n\n    _this.backFunction = function () {\n      _this.props.navigation.goBack();\n    };\n\n    _this.state = {\n      selectedIndex: 2\n    };\n    _this.updateIndex = _this.updateIndex.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ShowScreen, [{\n    key: \"updateIndex\",\n    value: function updateIndex(selectedIndex) {\n      this.setState({\n        selectedIndex: selectedIndex\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var buttons = [{\n        element: function element() {\n          return React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 21\n            }\n          });\n        }\n      }, {\n        element: function element() {\n          return React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 21\n            }\n          });\n        }\n      }, {\n        element: function element() {\n          return React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 21\n            }\n          });\n        }\n      }];\n      var selectedIndex = this.state.selectedIndex;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, React.createElement(Header, {\n        name: this.props.navigation.getParam('date'),\n        f: this.backFunction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }), React.createElement(StatusBar, {\n        barStyle: \"light-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.textBold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }, \"data: \"), this.props.navigation.getParam('date')), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.textBold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, \"\\u0417\\u0430\\u043C\\u0435\\u0442\\u043A\\u0430: \"), this.props.navigation.getParam('text')), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.textBold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }, \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F: \"), this.props.navigation.getParam('category')), React.createElement(ButtonGroup, {\n        onPress: this.updateIndex,\n        selectedIndex: selectedIndex,\n        buttons: buttons,\n        containerStyle: styles.containerStyle,\n        buttonStyle: styles.buttonStyle,\n        selectedButtonStyle: styles.selectedButtonStyle + selectedIndex,\n        containerBorderRadius: 0,\n        underlayColor: \"#eeeeee\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 5\n        }\n      }));\n    }\n  }]);\n\n  return ShowScreen;\n}(Component);\nShowScreen.navigationOptions = {\n  header: null\n};\nvar styles = StyleSheet.create({\n  text: {\n    fontSize: 18,\n    color: '#21252b',\n    margin: 15\n  },\n  textBold: {\n    fontSize: 20,\n    color: '#21252b',\n    margin: 15,\n    fontWeight: \"500\"\n  },\n  qr: {\n    padding: 20,\n    textAlign: \"center\"\n  },\n  container: {\n    flex: 1,\n    backgroundColor: 'red',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  containerStyle: {\n    height: 50,\n    width: 200,\n    textAlign: \"center\",\n    backgroundColor: '#ffffff',\n    marginTop: 0,\n    borderRadius: 0,\n    justifyContent: \"center\"\n  },\n  buttonStyle: {\n    width: 50,\n    borderRadius: '100%',\n    backgroundColor: '#eeeeee',\n    borderWidth: 0\n  },\n  selectedButtonStyle: {\n    backgroundColor: '#27ae60'\n  },\n  selectedButtonStyle1: {\n    backgroundColor: '#3498db'\n  },\n  selectedButtonStyle2: {\n    backgroundColor: '#f1c40f'\n  }\n});\nexport default ShowScreen;","map":{"version":3,"sources":["C:/LABSREACT/lab1/screens/ShowScreen.js"],"names":["React","Component","Header","Item","Text","Button","ButtonGroup","ShowScreen","backFunction","props","navigation","goBack","state","selectedIndex","updateIndex","bind","setState","buttons","element","getParam","styles","text","textBold","containerStyle","buttonStyle","selectedButtonStyle","navigationOptions","header","StyleSheet","create","fontSize","color","margin","fontWeight","qr","padding","textAlign","container","flex","backgroundColor","alignItems","justifyContent","height","width","marginTop","borderRadius","borderWidth","selectedButtonStyle1","selectedButtonStyle2"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { View, StyleSheet, StatusBar } from 'react-native'\r\nimport Header from '../components/Header'\r\nimport { Item, Text, Button } from 'native-base'\r\nimport { ButtonGroup } from 'react-native-elements';\r\n\r\nexport class ShowScreen extends Component {\r\n\r\n\tconstructor () {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t  selectedIndex: 2\r\n\t\t}\r\n\t\tthis.updateIndex = this.updateIndex.bind(this)\r\n\t}\r\n\r\n\tupdateIndex (selectedIndex) {\r\n\t\tthis.setState({selectedIndex})\r\n\t}\r\n\r\n    static navigationOptions = {\r\n        header: null\r\n    }\r\n\r\n    backFunction = () => {\r\n        this.props.navigation.goBack()\r\n\t}\r\n\r\n\t\r\n\trender() {\r\n\t\tconst buttons = [\r\n\t\t\t{ element: () => <Text></Text> },\r\n\t\t\t{ element: () => <Text></Text> },\r\n\t\t\t{ element: () => <Text></Text> }]\r\n\r\n\r\n\t\tconst { selectedIndex } = this.state\r\n\r\n        return(\r\n            <View>\r\n                <Header name={this.props.navigation.getParam('date')} f={this.backFunction}/>\r\n                <StatusBar barStyle='light-content' />\r\n                <Text style={styles.text}>\r\n                    <Text style={styles.textBold}>data: </Text>\r\n                    {this.props.navigation.getParam('date')}\r\n                </Text>\r\n                <Text style={styles.text}>\r\n                    <Text style={styles.textBold}>Заметка: </Text>\r\n                    {this.props.navigation.getParam('text')}\r\n                </Text>\r\n                <Text style={styles.text}>\r\n                    <Text style={styles.textBold}>Категория: </Text>\r\n                    {this.props.navigation.getParam('category')}\r\n\t\t\t\t</Text>\r\n\t\t\t\t<ButtonGroup\r\n\t\t\t\t\tonPress={this.updateIndex}\r\n\t\t\t\t\tselectedIndex={selectedIndex}\r\n\t\t\t\t\tbuttons={buttons}\r\n                    containerStyle={styles.containerStyle}\r\n                    buttonStyle={styles.buttonStyle}\r\n                    selectedButtonStyle={styles.selectedButtonStyle + selectedIndex}\r\n                    containerBorderRadius={0}\r\n                    underlayColor='#eeeeee'\r\n\t\t\t\t/>\r\n            </View>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    text: {\r\n        fontSize: 18,\r\n        color: '#21252b',\r\n        margin: 15\r\n    },\r\n    textBold: {\r\n        fontSize: 20,\r\n        color: '#21252b',\r\n        margin: 15,\r\n        fontWeight: \"500\"\r\n\t},\r\n\tqr: {\r\n\t\tpadding: 20,\r\n\t\ttextAlign:\"center\"\r\n\t},\r\n\tcontainer: {\r\n        flex: 1,\r\n        backgroundColor: 'red',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    containerStyle: {\r\n        height: 50,\r\n\t\twidth: 200,\r\n\t\ttextAlign: \"center\",\r\n        // borderTopRightRadius: 20,\r\n        backgroundColor: '#ffffff',\r\n        marginTop: 0,\r\n\t\tborderRadius: 0,\r\n\t\tjustifyContent: \"center\",\r\n    },\r\n\tbuttonStyle: {\r\n\t\twidth: 50,\r\n\t\tborderRadius: '100%',\r\n        backgroundColor: '#eeeeee',\r\n        borderWidth: 0,\r\n    },\r\n    selectedButtonStyle: {\r\n        backgroundColor: '#27ae60',\r\n    },\r\n    selectedButtonStyle1: {\r\n        backgroundColor: '#3498db',\r\n    },\r\n    selectedButtonStyle2: {\r\n        backgroundColor: '#f1c40f',\r\n    }\r\n})\r\nexport default ShowScreen"]},"metadata":{},"sourceType":"module"}