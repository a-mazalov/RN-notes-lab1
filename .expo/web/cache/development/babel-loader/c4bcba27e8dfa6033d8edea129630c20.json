{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\LABSREACT\\\\lab3\\\\AwesomeProject\\\\App.js\";\nimport RootNavigator from \"./navigation\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      scanned = _useState4[0],\n      setScanned = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$BarCodeScanner, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(BarCodeScanner.requestPermissionsAsync());\n\n            case 2:\n              _await$BarCodeScanner = _context.sent;\n              status = _await$BarCodeScanner.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref) {\n    var type = _ref.type,\n        data = _ref.data;\n    setScanned(true);\n    alert(\"Bar code with type \" + type + \" and data \" + data + \" has been scanned!\");\n  };\n\n  return React.createElement(RootNavigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }\n  });\n}","map":{"version":3,"sources":["C:/LABSREACT/lab3/AwesomeProject/App.js"],"names":["RootNavigator","React","useState","useEffect","BarCodeScanner","App","hasPermission","setHasPermission","scanned","setScanned","requestPermissionsAsync","status","handleBarCodeScanned","type","data","alert"],"mappings":";;;AAAA,OAAOA,aAAP;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,SAASC,cAAT,QAA+B,sBAA/B;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACaH,QAAQ,CAAC,IAAD,CADrB;AAAA;AAAA,MACtBI,aADsB;AAAA,MACPC,gBADO;;AAAA,mBAECL,QAAQ,CAAC,KAAD,CAFT;AAAA;AAAA,MAEtBM,OAFsB;AAAA,MAEbC,UAFa;;AAI7BN,EAAAA,SAAS,CAAC,YAAM;AACd,KAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACuBC,cAAc,CAACM,uBAAf,EADvB;;AAAA;AAAA;AACMC,cAAAA,MADN,yBACMA,MADN;AAEFJ,cAAAA,gBAAgB,CAACI,MAAM,KAAK,SAAZ,CAAhB;;AAFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAID,GALQ,EAKN,EALM,CAAT;;AAOA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,OAAoB;AAAA,QAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,QAAXC,IAAW,QAAXA,IAAW;AAC/CL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAM,IAAAA,KAAK,yBAAuBF,IAAvB,kBAAwCC,IAAxC,wBAAL;AACD,GAHD;;AAKG,SAAO,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH","sourcesContent":["import RootNavigator from './navigation'\n\nimport React, { useState, useEffect } from 'react';\nimport { Text, View, StyleSheet, Button } from 'react-native';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\n\nexport default function App() {\n\tconst [hasPermission, setHasPermission] = useState(null);\n\tconst [scanned, setScanned] = useState(false);\n  \n\tuseEffect(() => {\n\t  (async () => {\n\t\tconst { status } = await BarCodeScanner.requestPermissionsAsync();\n\t\tsetHasPermission(status === 'granted');\n\t  })();\n\t}, []);\n  \n\tconst handleBarCodeScanned = ({ type, data }) => {\n\t  setScanned(true);\n\t  alert(`Bar code with type ${type} and data ${data} has been scanned!`);\n\t};\n\n    return <RootNavigator />\n}"]},"metadata":{},"sourceType":"module"}