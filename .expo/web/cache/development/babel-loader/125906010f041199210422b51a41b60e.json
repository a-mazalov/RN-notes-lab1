{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\LABSREACT\\\\lab3\\\\AwesomeProject\\\\screens\\\\AddScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Form, Item, Input, Button, Text as NBText } from 'native-base';\nimport Header from \"../components/Header\";\nexport var AddScreen = function (_Component) {\n  _inherits(AddScreen, _Component);\n\n  var _super = _createSuper(AddScreen);\n\n  function AddScreen() {\n    var _this;\n\n    _classCallCheck(this, AddScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      text: '',\n      name: '',\n      phone: '',\n      site: ''\n    };\n\n    _this.onChangeText = function (event) {\n      var _this$state = _this.state,\n          name = _this$state.name,\n          phone = _this$state.phone,\n          site = _this$state.site;\n\n      _this.setState({\n        name: name,\n        phone: phone,\n        site: site\n      });\n    };\n\n    _this.backFunction = function () {\n      _this.props.navigation.goBack();\n    };\n\n    _this.onAddTask = function () {\n      var regexpName = /^[A-zА-яЁё_ ]+$/;\n      var regexpPhone = /^[0-9]+$/;\n      var regexpSite = /[-a-zA-Z0-9@:%_\\+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Zа-яА-Я0-9@:%_\\+.~#?&//=]*)?/gi;\n\n      if (regexpName.test(_this.state.name)) {\n        if (regexpPhone.test(_this.state.phone)) {\n          if (regexpSite.test(_this.state.site)) {\n            var obj = {\n              name: _this.state.name,\n              phone: _this.state.phone,\n              site: _this.state.site\n            };\n\n            _this.props.navigation.state.params.saveItem(obj);\n\n            _this.props.navigation.goBack();\n          } else {\n            alert('Неверный сайт');\n          }\n        } else {\n          alert('Неверный номер');\n        }\n      } else {\n        alert('Неверное ФИО');\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AddScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, React.createElement(Header, {\n        name: 'Добавить',\n        f: this.backFunction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }), React.createElement(StatusBar, {\n        barStyle: \"light-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: {\n          marginRight: 10,\n          marginTop: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }, React.createElement(Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }\n      }, React.createElement(Input, {\n        value: this.state.task,\n        placeholder: \"\\u0424\\u0418\\u041E\",\n        autoFocus: true,\n        clearButtonMode: \"always\",\n        autoCorrect: false,\n        onChangeText: function onChangeText(name) {\n          return _this2.setState({\n            name: name\n          });\n        },\n        returnKeyType: 'done',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }\n      })), React.createElement(Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, React.createElement(Input, {\n        value: this.state.task,\n        placeholder: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\",\n        autoFocus: true,\n        clearButtonMode: \"always\",\n        autoCorrect: false,\n        keyboardType: \"numeric\",\n        onChangeText: function onChangeText(phone) {\n          return _this2.setState({\n            phone: phone\n          });\n        },\n        returnKeyType: 'done',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }\n      })), React.createElement(Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }\n      }, React.createElement(Input, {\n        value: this.state.task,\n        placeholder: \"\\u0412\\u0435\\u0431 \\u0441\\u0430\\u0439\\u0442\",\n        autoFocus: true,\n        clearButtonMode: \"always\",\n        autoCorrect: false,\n        keyboardType: \"url\",\n        onChangeText: function onChangeText(site) {\n          return _this2.setState({\n            site: site\n          });\n        },\n        returnKeyType: 'done',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }\n      })))), React.createElement(View, {\n        style: {\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        style: {\n          backgroundColor: '#21252b',\n          margin: 25,\n          justifyContent: 'center'\n        },\n        onPress: this.onAddTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }\n      }, React.createElement(NBText, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"))));\n    }\n  }]);\n\n  return AddScreen;\n}(Component);\nAddScreen.navigationOptions = {\n  header: null\n};\nexport default AddScreen;","map":{"version":3,"sources":["C:/LABSREACT/lab3/AwesomeProject/screens/AddScreen.js"],"names":["React","Component","Form","Item","Input","Button","Text","NBText","Header","AddScreen","state","text","name","phone","site","onChangeText","event","setState","backFunction","props","navigation","goBack","onAddTask","regexpName","regexpPhone","regexpSite","test","obj","params","saveItem","alert","marginRight","marginTop","task","backgroundColor","margin","justifyContent","fontWeight","navigationOptions","header"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { View, StatusBar } from 'react-native'\r\nimport { Form, Item, Input, Button, Text as NBText } from 'native-base'\r\nimport Header from '../components/Header'\r\n\r\nexport class AddScreen extends Component {\r\n\r\n    static navigationOptions = {\r\n        header: null\r\n    }\r\n\r\n    state = {\r\n        text: '',\r\n        name: '',\r\n        phone: '',\r\n        site: ''\r\n    }\r\n\r\n    onChangeText = event => {\r\n        const {name, phone, site} = this.state;\r\n        this.setState({ name: name, phone: phone, site: site})\r\n    }\r\n\r\n    backFunction = () => {\r\n        this.props.navigation.goBack()\r\n    }\r\n\r\n    onAddTask = () => {\r\n        let regexpName = /^[A-zА-яЁё_ ]+$/;\r\n        let regexpPhone = /^[0-9]+$/;\r\n        let regexpSite = /[-a-zA-Z0-9@:%_\\+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Zа-яА-Я0-9@:%_\\+.~#?&//=]*)?/gi;\r\n        if(regexpName.test(this.state.name)) {\r\n            if(regexpPhone.test(this.state.phone)) {\r\n                if(regexpSite.test(this.state.site)) {\r\n                    let obj = {\r\n                        name: this.state.name,\r\n                        phone: this.state.phone,\r\n                        site: this.state.site\r\n                    }\r\n                    this.props.navigation.state.params.saveItem(obj)\r\n                    this.props.navigation.goBack()\r\n                } else {\r\n                    alert('Неверный сайт')\r\n                }\r\n            } else {\r\n                alert('Неверный номер')\r\n            }\r\n        } else {\r\n            alert('Неверное ФИО')\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View>\r\n                <Header name={'Добавить'} f={this.backFunction}/>\r\n                <StatusBar barStyle='light-content' />\r\n                <View style={{ marginRight: 10, marginTop: 25 }}>\r\n                    <Form>\r\n                        <Item>\r\n                            <Input\r\n                            value={this.state.task}\r\n                                placeholder='ФИО'                                \r\n                                autoFocus\r\n                                clearButtonMode='always'\r\n                                autoCorrect={false}\r\n                                onChangeText={name => this.setState({name})}\r\n                                returnKeyType={'done'}\r\n                            />\r\n                        </Item>\r\n                        <Item>\r\n                            <Input\r\n                            value={this.state.task}\r\n                                placeholder='Телефон'                                \r\n                                autoFocus\r\n                                clearButtonMode='always'\r\n                                autoCorrect={false}\r\n                                keyboardType=\"numeric\"\r\n                                onChangeText={phone => this.setState({phone})}\r\n                                returnKeyType={'done'}\r\n                            />\r\n                        </Item>\r\n                        <Item>\r\n                            <Input\r\n                            value={this.state.task}\r\n                                placeholder='Веб сайт'                                \r\n                                autoFocus\r\n                                clearButtonMode='always'\r\n                                autoCorrect={false}\r\n                                keyboardType=\"url\"\r\n                                onChangeText={site => this.setState({site})}\r\n                                returnKeyType={'done'}\r\n                            />\r\n                        </Item>\r\n                    </Form>\r\n                </View>\r\n                <View style={{ marginTop: 20 }}>\r\n                    <Button\r\n                        style={{ backgroundColor: '#21252b', margin: 25, justifyContent: 'center' }}\r\n                        onPress={this.onAddTask}\r\n                    >\r\n                        <NBText style={{ fontWeight: 'bold' }}>Добавить</NBText>\r\n                    </Button>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default AddScreen"]},"metadata":{},"sourceType":"module"}