{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\LABSREACT\\\\lab1\\\\screens\\\\AddScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Form, Item, Input, Button, Text as NBText } from 'native-base';\nimport Header from \"../components/Header\";\nimport { ButtonGroup, Text } from 'react-native-elements';\nexport var AddScreen = function (_Component) {\n  _inherits(AddScreen, _Component);\n\n  var _super = _createSuper(AddScreen);\n\n  function AddScreen() {\n    var _this;\n\n    _classCallCheck(this, AddScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      date: '',\n      title: '',\n      text: '',\n      category: ''\n    };\n\n    _this.onChangeText = function (event) {\n      var _this$state = _this.state,\n          date = _this$state.date,\n          title = _this$state.title,\n          text = _this$state.text,\n          category = _this$state.category;\n\n      _this.setState({\n        date: date,\n        title: title,\n        text: text,\n        category: category\n      });\n    };\n\n    _this.backFunction = function () {\n      _this.props.navigation.goBack();\n    };\n\n    _this.onAddTask = function () {\n      var obj = {\n        date: new Date().getTime(),\n        title: _this.state.title,\n        text: _this.state.text,\n        category: _this.state.category\n      };\n\n      _this.props.navigation.state.params.saveItem(obj);\n\n      _this.props.navigation.goBack();\n    };\n\n    return _this;\n  }\n\n  _createClass(AddScreen, [{\n    key: \"updateIndex\",\n    value: function updateIndex(selectedIndex) {\n      this.setState({\n        selectedIndex: selectedIndex\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var buttons = [{\n        element: function element() {\n          return React.createElement(Text, {\n            style: {\n              backgroundColor: '#27ae60',\n              width: '98%',\n              height: '98%',\n              borderRadius: '100%'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }\n          });\n        }\n      }, {\n        element: function element() {\n          return React.createElement(Text, {\n            style: {\n              backgroundColor: '#3498db',\n              width: '98%',\n              height: '98%',\n              borderRadius: '100%'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }\n          });\n        }\n      }, {\n        element: function element() {\n          return React.createElement(Text, {\n            style: {\n              backgroundColor: '#f1c40f',\n              width: '98%',\n              height: '98%',\n              borderRadius: '100%'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }\n          });\n        }\n      }];\n      var category = this.state.category;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, React.createElement(Header, {\n        name: 'Добавить',\n        f: this.backFunction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }), React.createElement(StatusBar, {\n        barStyle: \"light-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: {\n          marginRight: 10,\n          marginTop: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }, React.createElement(Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }, React.createElement(Input, {\n        value: this.state.title,\n        placeholder: \"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\",\n        autoFocus: true,\n        clearButtonMode: \"always\",\n        autoCorrect: false,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            title: title\n          });\n        },\n        returnKeyType: 'done',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }\n      })), React.createElement(Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      }, React.createElement(Input, {\n        value: this.state.text,\n        placeholder: \"\\u0417\\u0430\\u043C\\u0435\\u0442\\u043A\\u0430\",\n        autoFocus: true,\n        clearButtonMode: \"always\",\n        autoCorrect: false,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            text: text\n          });\n        },\n        returnKeyType: 'done',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }\n      })), React.createElement(ButtonGroup, {\n        onPress: function onPress(category) {\n          return _this2.setState({\n            category: category\n          });\n        },\n        selectedIndex: category,\n        buttons: buttons,\n        containerStyle: styles.containerStyle,\n        buttonStyle: styles.buttonStyle,\n        selectedButtonStyle: styles.selectedButtonStyle,\n        containerBorderRadius: 0,\n        underlayColor: \"#eeeeee\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }\n      }))), React.createElement(View, {\n        style: {\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        style: {\n          backgroundColor: '#21252b',\n          margin: 25,\n          justifyContent: 'center'\n        },\n        onPress: this.onAddTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }\n      }, React.createElement(NBText, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }\n      }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"))));\n    }\n  }]);\n\n  return AddScreen;\n}(Component);\nAddScreen.navigationOptions = {\n  header: null\n};\nvar styles = StyleSheet.create({\n  containerStyle: {\n    height: 50,\n    width: 350,\n    backgroundColor: '#ffffff',\n    marginTop: 10,\n    borderRadius: 0,\n    justifyContent: \"center\"\n  },\n  buttonStyle: {\n    width: 50,\n    borderRadius: '100%',\n    backgroundColor: '#eeeeee',\n    borderWidth: 2,\n    borderColor: '#ffffff',\n    alignSelf: \"center\"\n  },\n  selectedButtonStyle: {\n    borderColor: '#34495e',\n    borderWidth: 2\n  }\n});\nexport default AddScreen;","map":{"version":3,"sources":["C:/LABSREACT/lab1/screens/AddScreen.js"],"names":["React","Component","Form","Item","Input","Button","Text","NBText","Header","ButtonGroup","AddScreen","state","date","title","text","category","onChangeText","event","setState","backFunction","props","navigation","goBack","onAddTask","obj","Date","getTime","params","saveItem","selectedIndex","buttons","element","backgroundColor","width","height","borderRadius","marginRight","marginTop","styles","containerStyle","buttonStyle","selectedButtonStyle","margin","justifyContent","fontWeight","navigationOptions","header","StyleSheet","create","borderWidth","borderColor","alignSelf"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { View, StatusBar, StyleSheet } from 'react-native'\r\nimport { Form, Item, Input, Button, Text as NBText } from 'native-base'\r\nimport Header from '../components/Header'\r\nimport { ButtonGroup, Text } from 'react-native-elements';\r\n\r\nexport class AddScreen extends Component {\r\n\r\n\t// constructor () {\r\n\t// \tsuper()\r\n\t// \tthis.state = {\r\n\t// \t  selectedIndex: null\r\n\t// \t}\r\n\t// \tthis.updateIndex = this.updateIndex.bind(this)\r\n\t// }\r\n\r\n\tupdateIndex (selectedIndex) {\r\n\t\tthis.setState({selectedIndex})\r\n\t}\r\n\r\n    static navigationOptions = {\r\n        header: null\r\n    }\r\n\r\n    state = {\r\n        date: '',\r\n        title: '',\r\n        text: '',\r\n        category: ''\r\n    }\r\n\r\n    onChangeText = event => {\r\n        const {date, title, text, category} = this.state;\r\n        this.setState({ date: date, title: title, text: text, category: category})\r\n    }\r\n\r\n    backFunction = () => {\r\n        this.props.navigation.goBack()\r\n    }\r\n\r\n    onAddTask = () => {\r\n\t\tlet obj = {\r\n\t\t\tdate: new Date().getTime(),\r\n\t\t\ttitle: this.state.title,\r\n\t\t\ttext: this.state.text,\r\n\t\t\tcategory: this.state.category\r\n\t\t}\r\n\t\tthis.props.navigation.state.params.saveItem(obj)\r\n\t\tthis.props.navigation.goBack()\r\n    }\r\n\r\n\trender() {\r\n\t\t\r\n\t\tconst buttons = [\r\n\t\t\t{ element: () => <Text style={{backgroundColor: '#27ae60', width: '98%', height: '98%', borderRadius: '100%' }}></Text> },\r\n\t\t\t{ element: () => <Text style={{backgroundColor: '#3498db', width: '98%', height: '98%', borderRadius: '100%' }}></Text> },\r\n\t\t\t{ element: () => <Text style={{backgroundColor: '#f1c40f', width: '98%', height: '98%', borderRadius: '100%' }}></Text> },\r\n\t\t]\r\n\t\tconst { category } = this.state;\r\n\r\n        return (\r\n            <View>\r\n                <Header name={'Добавить'} f={this.backFunction}/>\r\n                <StatusBar barStyle='light-content' />\r\n                <View style={{ marginRight: 10, marginTop: 25 }}>\r\n                    <Form>\r\n                        <Item>\r\n                            <Input\r\n                            \tvalue={this.state.title}\r\n                                placeholder='Заголовок'                                \r\n                                autoFocus\r\n                                clearButtonMode='always'\r\n                                autoCorrect={false}\r\n                                onChangeText={text => this.setState({title})}\r\n                                returnKeyType={'done'}\r\n                            />\r\n\t\t\t\t\t\t</Item>\r\n                        <Item>\r\n                            <Input\r\n                            \tvalue={this.state.text}\r\n                                placeholder='Заметка'                                \r\n                                autoFocus\r\n                                clearButtonMode='always'\r\n                                autoCorrect={false}\r\n                                onChangeText={text => this.setState({text})}\r\n                                returnKeyType={'done'}\r\n                            />\r\n\t\t\t\t\t\t</Item>\r\n\t\t\t\t\t\t<ButtonGroup\r\n\t\t\t\t\t\t\tonPress={category => this.setState({category})}\r\n\t\t\t\t\t\t\tselectedIndex={category}\r\n\t\t\t\t\t\t\tbuttons={buttons}\r\n\t\t\t\t\t\t\tcontainerStyle={styles.containerStyle}\r\n\t\t\t\t\t\t\tbuttonStyle={styles.buttonStyle}\r\n\t\t\t\t\t\t\tselectedButtonStyle={styles.selectedButtonStyle}\r\n\t\t\t\t\t\t\tcontainerBorderRadius={0}\r\n\t\t\t\t\t\t\tunderlayColor='#eeeeee'\r\n\t\t\t\t\t\t/>\r\n                        {/* <Item>\r\n                            <Input\r\n                            \tvalue={this.state.task}\r\n                                placeholder='Категория'                                \r\n                                autoFocus\r\n                                clearButtonMode='always'\r\n                                autoCorrect={false}\r\n                                keyboardType=\"numeric\"\r\n                                onChangeText={category => this.setState({category})}\r\n                                returnKeyType={'done'}\r\n                            />\r\n\t\t\t\t\t\t</Item> */}\r\n\t\t\t\t\t\t{/* <Item>\r\n                            <Input\r\n                            \tvalue={this.state.task}\r\n                                placeholder='Дата'                                \r\n                                autoFocus\r\n                                clearButtonMode='always'\r\n\t\t\t\t\t\t\t\tautoCorrect={false}\r\n                                onChangeText={date => this.setState({date})}\r\n                                returnKeyType={'done'}\r\n                            />\r\n                        </Item> */}\r\n                    </Form>\r\n                </View>\r\n                <View style={{ marginTop: 20 }}>\r\n                    <Button\r\n                        style={{ backgroundColor: '#21252b', margin: 25, justifyContent: 'center' }}\r\n                        onPress={this.onAddTask}\r\n                    >\r\n                        <NBText style={{ fontWeight: 'bold' }}>Добавить</NBText>\r\n                    </Button>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    containerStyle: {\r\n        height: 50,\r\n\t\twidth: 350,\r\n        // borderTopRightRadius: 20,\r\n        backgroundColor: '#ffffff',\r\n        marginTop: 10,\r\n\t\tborderRadius: 0,\r\n\t\tjustifyContent: \"center\",\r\n    },\r\n\tbuttonStyle: {\r\n\t\twidth: 50,\r\n\t\tborderRadius: '100%',\r\n        backgroundColor: '#eeeeee',\r\n\t\tborderWidth: 2,\r\n\t\tborderColor: '#ffffff', \r\n\t\talignSelf: \"center\"\r\n    },\r\n    selectedButtonStyle: {\r\n\t\tborderColor: '#34495e', \r\n\t\tborderWidth: 2,\r\n    },\r\n})\r\n\r\nexport default AddScreen"]},"metadata":{},"sourceType":"module"}