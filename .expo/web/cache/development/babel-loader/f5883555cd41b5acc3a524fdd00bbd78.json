{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\LABSREACT\\\\lab1\\\\screens\\\\AddScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Form, Item, Input, Button, Text as NBText } from 'native-base';\nimport Header from \"../components/Header\";\nexport var AddScreen = function (_Component) {\n  _inherits(AddScreen, _Component);\n\n  var _super = _createSuper(AddScreen);\n\n  function AddScreen() {\n    var _this;\n\n    _classCallCheck(this, AddScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      date: '',\n      text: '',\n      category: ''\n    };\n\n    _this.onChangeText = function (event) {\n      var _this$state = _this.state,\n          date = _this$state.date,\n          text = _this$state.text,\n          category = _this$state.category;\n\n      _this.setState({\n        date: date,\n        text: text,\n        category: category\n      });\n    };\n\n    _this.backFunction = function () {\n      _this.props.navigation.goBack();\n    };\n\n    _this.onAddTask = function () {\n      var obj = {\n        date: _this.state.date,\n        text: _this.state.text,\n        category: _this.state.category\n      };\n\n      _this.props.navigation.state.params.saveItem(obj);\n\n      _this.props.navigation.goBack();\n    };\n\n    return _this;\n  }\n\n  _createClass(AddScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, React.createElement(Header, {\n        name: 'Добавить',\n        f: this.backFunction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }), React.createElement(StatusBar, {\n        barStyle: \"light-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: {\n          marginRight: 10,\n          marginTop: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      }, React.createElement(Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }\n      }, React.createElement(Input, {\n        value: this.state.task,\n        placeholder: \"\\u0414\\u0430\\u0442\\u0430\",\n        autoFocus: true,\n        clearButtonMode: \"always\",\n        autoCorrect: false,\n        onChangeText: function onChangeText(date) {\n          return _this2.setState({\n            date: date\n          });\n        },\n        returnKeyType: 'done',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }\n      })), React.createElement(Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      }, React.createElement(Input, {\n        value: this.state.task,\n        placeholder: \"\\u0417\\u0430\\u043C\\u0435\\u0442\\u043A\\u0430\",\n        autoFocus: true,\n        clearButtonMode: \"always\",\n        autoCorrect: false,\n        keyboardType: \"numeric\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            text: text\n          });\n        },\n        returnKeyType: 'done',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }\n      })), React.createElement(Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }, React.createElement(Input, {\n        value: this.state.task,\n        placeholder: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\",\n        autoFocus: true,\n        clearButtonMode: \"always\",\n        autoCorrect: false,\n        keyboardType: \"url\",\n        onChangeText: function onChangeText(category) {\n          return _this2.setState({\n            category: category\n          });\n        },\n        returnKeyType: 'done',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }\n      })))), React.createElement(View, {\n        style: {\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        style: {\n          backgroundColor: '#21252b',\n          margin: 25,\n          justifyContent: 'center'\n        },\n        onPress: this.onAddTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }, React.createElement(NBText, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }\n      }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"))));\n    }\n  }]);\n\n  return AddScreen;\n}(Component);\nAddScreen.navigationOptions = {\n  header: null\n};\nexport default AddScreen;","map":{"version":3,"sources":["C:/LABSREACT/lab1/screens/AddScreen.js"],"names":["React","Component","Form","Item","Input","Button","Text","NBText","Header","AddScreen","state","date","text","category","onChangeText","event","setState","backFunction","props","navigation","goBack","onAddTask","obj","params","saveItem","marginRight","marginTop","task","backgroundColor","margin","justifyContent","fontWeight","navigationOptions","header"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { View, StatusBar } from 'react-native'\r\nimport { Form, Item, Input, Button, Text as NBText } from 'native-base'\r\nimport Header from '../components/Header'\r\n\r\nexport class AddScreen extends Component {\r\n\r\n    static navigationOptions = {\r\n        header: null\r\n    }\r\n\r\n    state = {\r\n        date: '',\r\n        text: '',\r\n        category: ''\r\n    }\r\n\r\n    onChangeText = event => {\r\n        const {date, text, category} = this.state;\r\n        this.setState({ date: date, text: text, category: category})\r\n    }\r\n\r\n    backFunction = () => {\r\n        this.props.navigation.goBack()\r\n    }\r\n\r\n    onAddTask = () => {\r\n\t\tlet obj = {\r\n\t\t\tdate: this.state.date,\r\n\t\t\ttext: this.state.text,\r\n\t\t\tcategory: this.state.category\r\n\t\t}\r\n\t\tthis.props.navigation.state.params.saveItem(obj)\r\n\t\tthis.props.navigation.goBack()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View>\r\n                <Header name={'Добавить'} f={this.backFunction}/>\r\n                <StatusBar barStyle='light-content' />\r\n                <View style={{ marginRight: 10, marginTop: 25 }}>\r\n                    <Form>\r\n                        <Item>\r\n                            <Input\r\n                            \tvalue={this.state.task}\r\n                                placeholder='Дата'                                \r\n                                autoFocus\r\n                                clearButtonMode='always'\r\n                                autoCorrect={false}\r\n                                onChangeText={date => this.setState({date})}\r\n                                returnKeyType={'done'}\r\n                            />\r\n                        </Item>\r\n                        <Item>\r\n                            <Input\r\n                            value={this.state.task}\r\n                                placeholder='Заметка'                                \r\n                                autoFocus\r\n                                clearButtonMode='always'\r\n                                autoCorrect={false}\r\n                                keyboardType=\"numeric\"\r\n                                onChangeText={text => this.setState({text})}\r\n                                returnKeyType={'done'}\r\n                            />\r\n                        </Item>\r\n                        <Item>\r\n                            <Input\r\n                            value={this.state.task}\r\n                                placeholder='Категория'                                \r\n                                autoFocus\r\n                                clearButtonMode='always'\r\n                                autoCorrect={false}\r\n                                keyboardType=\"url\"\r\n                                onChangeText={category => this.setState({category})}\r\n                                returnKeyType={'done'}\r\n                            />\r\n                        </Item>\r\n                    </Form>\r\n                </View>\r\n                <View style={{ marginTop: 20 }}>\r\n                    <Button\r\n                        style={{ backgroundColor: '#21252b', margin: 25, justifyContent: 'center' }}\r\n                        onPress={this.onAddTask}\r\n                    >\r\n                        <NBText style={{ fontWeight: 'bold' }}>Добавить</NBText>\r\n                    </Button>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default AddScreen"]},"metadata":{},"sourceType":"module"}